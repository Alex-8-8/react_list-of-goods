{"version":3,"sources":["components/Buttons/Buttons.js","components/Select/Select.js","components/GoodList/GoodList.js","App.js","index.js"],"names":["Buttons","reverseBtn","sortBtn","sortLengthBtn","resetBtn","Fragment","type","onClick","Select","stringLength","selectBtn","quantity","onChange","value","Array","fill","map","element","index","key","GoodList","state","goods","props","goodList","length","goodsCopy","reversed","setState","prevState","reverse","sortAlph","sort","sortLength","a","b","reset","selectFunc","target","filter","item","this","good","React","Component","goodsFromServer","App","isShown","showClick","className","ReactDOM","render","document","getElementById"],"mappings":"mPAGaA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,cAAeC,EAAvC,EAAuCA,SAAvC,OACrB,kBAAC,IAAMC,SAAP,KACE,4BACEC,KAAK,SACLC,QAASN,GAFX,WAMA,4BACEK,KAAK,SACLC,QAASL,GAFX,uBAMA,4BACEI,KAAK,SACLC,QAASH,GAFX,SAMA,4BACEE,KAAK,SACLC,QAASJ,GAFX,oBCpBSK,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,SAA5B,OACpB,4BACEC,SAAUF,EACVG,MAAOJ,GAGL,IAAIK,MAAMH,GAAUI,KAAK,GAAGC,KAAI,SAACC,EAASC,GAAV,OAC9B,4BAAQC,IAAKF,EAASJ,MAAOK,EAAQ,GAAIA,EAAQ,QCL5CE,EAAb,2MACEC,MAAQ,CACNC,MAAM,YAAK,EAAKC,MAAMC,UACtBC,OAAQ,IACRC,UAAU,YAAK,EAAKH,MAAMC,WAJ9B,EAOEG,SAAW,WACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BP,MAAOO,EAAUP,MAAMQ,eAT7B,EAaEC,SAAW,WACT,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BP,MAAOO,EAAUP,MAAMU,YAf7B,EAmBEC,WAAa,WACX,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BP,MAAOO,EAAUP,MAAMU,MAAK,SAACE,EAAGC,GAAJ,OAC1BD,EAAET,OAASU,EAAEV,eAtBrB,EA2BEW,MAAQ,WACN,EAAKR,UAAS,SAAAC,GAAS,MAAK,CAC1BP,MAAOO,EAAUH,UACjBD,OAAQ,SA9Bd,EAkCEY,WAAa,YAAiB,IAAdC,EAAa,EAAbA,OACd,EAAKV,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,OAAQa,EAAOzB,MACfS,MAAOO,EAAUH,UAAUa,QAAO,SAAAC,GAAI,OACpCA,EAAKf,QAAUa,EAAOzB,cAtC9B,wEA0CY,IAAD,EACmB4B,KAAKpB,MAAvBC,EADD,EACCA,MAAOG,EADR,EACQA,OAEf,OACE,kBAAC,IAAMpB,SAAP,KACE,kBAAC,EAAD,CACEJ,WAAYwC,KAAKd,SACjBzB,QAASuC,KAAKV,SACd5B,cAAesC,KAAKR,WACpB7B,SAAUqC,KAAKL,QAEjB,kBAAC,EAAD,CACE3B,aAAcgB,EACdf,UAAW+B,KAAKJ,WAChB1B,SAAU,YAAI8B,KAAKlB,MAAMC,UAAUC,SAErC,4BACGH,EAAMN,KAAI,SAAA0B,GAAI,OACb,wBAAIvB,IAAKuB,GAAOA,YA5D5B,GAA8BC,IAAMC,WCD9BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,2MACEzB,MAAQ,CACN0B,SAAS,GAFb,EAKEC,UAAY,WACV,EAAKpB,SAAS,CACZmB,SAAS,KAPf,wEAWY,IACAA,EAAYN,KAAKpB,MAAjB0B,QAER,OACE,yBAAKE,UAAU,OACb,qCACCF,EACI,kBAAC,EAAD,CAAUvB,SAAUqB,IAErB,4BACEvC,KAAK,SACLC,QAASkC,KAAKO,WAFhB,cApBZ,GAAyBJ,aCbzBM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.79235de0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Buttons = ({ reverseBtn, sortBtn, sortLengthBtn, resetBtn }) => (\n  <React.Fragment>\n    <button\n      type=\"button\"\n      onClick={reverseBtn}\n    >\n     Reverse\n    </button>\n    <button\n      type=\"button\"\n      onClick={sortBtn}\n    >\n      Sort alphabetically\n    </button>\n    <button\n      type=\"button\"\n      onClick={resetBtn}\n    >\n      reset\n    </button>\n    <button\n      type=\"button\"\n      onClick={sortLengthBtn}\n    >\n      Sort by length\n    </button>\n  </React.Fragment>\n);\n\nButtons.propTypes = {\n  reverseBtn: PropTypes.func.isRequired,\n  sortBtn: PropTypes.func.isRequired,\n  sortLengthBtn: PropTypes.func.isRequired,\n  resetBtn: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({ stringLength, selectBtn, quantity }) => (\n  <select\n    onChange={selectBtn}\n    value={stringLength}\n  >\n    {\n      new Array(quantity).fill(1).map((element, index) => (\n        <option key={element} value={index + 1}>{index + 1}</option>\n      ))\n    }\n  </select>\n);\n\nSelect.propTypes = {\n  stringLength: PropTypes.string.isRequired,\n  selectBtn: PropTypes.func.isRequired,\n  quantity: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Buttons } from '../Buttons/Buttons';\nimport { Select } from '../Select/Select';\n\nexport class GoodList extends React.Component {\n  state = {\n    goods: [...this.props.goodList],\n    length: '1',\n    goodsCopy: [...this.props.goodList],\n  }\n\n  reversed = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods.reverse(),\n    }));\n  }\n\n  sortAlph = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods.sort(),\n    }));\n  }\n\n  sortLength = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods.sort((a, b) => (\n        a.length - b.length\n      )),\n    }));\n  }\n\n  reset = () => {\n    this.setState(prevState => ({\n      goods: prevState.goodsCopy,\n      length: '1',\n    }));\n  }\n\n  selectFunc = ({ target }) => {\n    this.setState(prevState => ({\n      length: target.value,\n      goods: prevState.goodsCopy.filter(item => (\n        item.length >= target.value)),\n    }));\n  }\n\n  render() {\n    const { goods, length } = this.state;\n\n    return (\n      <React.Fragment>\n        <Buttons\n          reverseBtn={this.reversed}\n          sortBtn={this.sortAlph}\n          sortLengthBtn={this.sortLength}\n          resetBtn={this.reset}\n        />\n        <Select\n          stringLength={length}\n          selectBtn={this.selectFunc}\n          quantity={[...this.props.goodList].length}\n        />\n        <ul>\n          {goods.map(good => (\n            <li key={good}>{good}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n}\n\nGoodList.propTypes = {\n  goodList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodList/GoodList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends Component {\n  state = {\n    isShown: false,\n  }\n\n  showClick = () => {\n    this.setState({\n      isShown: true,\n    });\n  }\n\n  render() {\n    const { isShown } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isShown\n          ? (<GoodList goodList={goodsFromServer} />)\n          : (\n            <button\n              type=\"button\"\n              onClick={this.showClick}\n            >\n            Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}